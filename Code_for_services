CRAWLER AUTOMATION


import boto3

def lambda_handler(event, context):

   # Specify the name of the Glue crawler to start

   crawler_name = "your-crawler-name"


   # Create a Glue client

   glue_client = boto3.client('glue')


   try:

       # Start the Glue crawler

       response = glue_client.start_crawler(Name=crawler_name)

       print(f"Started Glue crawler: {crawler_name}")

       print(response)

       return {

           'statusCode': 200,

           'body': f"Started Glue crawler: {crawler_name}"

       }

   except Exception as e:

       print(f"Error starting Glue crawler: {crawler_name}")

       print(str(e))

       return {

           'statusCode': 500,

           'body': f"Error starting Glue crawler: {crawler_name}"

       }




JOB TO S3 AND PARQUET DATABASE

import json

import boto3

 


def lambda_handler(event, context):

    
  client = boto3.client('glue')
    
  client.start_job_run(
JobName = 'gluelambdajob' )
    
  print("glue lambda function")
    
  return{
  
    'statusCode': 200,
        
    'body': json.dumps('Hello from Lambda!')
    
  }


CLOUDWATCH EVENT TO SNS



{

 "source": ["aws.glue"],

 "detail-type": ["Glue Job State Change"],

 "detail": {

   "jobName": ["gluelambdajob"],

   "state": ["SUCCEEDED"]

 }

}







{

 "source": ["aws.glue"],

 "detail-type": ["Glue Job State Change"],

 "detail": {

   "jobName": ["gluelambdajob"],

   "state": ["FAILED"]

 }

}


